<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>OCM Tutorials / Guides on Open Component Model</title><link>/docs/tutorials/</link><description>Recent content in OCM Tutorials / Guides on Open Component Model</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>Â© Copyright 2024, SAP SE and Open Component Model Contributors</copyright><lastBuildDate>Tue, 19 Mar 2024 10:36:48 +0100</lastBuildDate><atom:link href="/docs/tutorials/index.xml" rel="self" type="application/rss+xml"/><item><title>Getting Started with OCM</title><link>/docs/tutorials/getting-started-with-ocm/</link><pubDate>Mon, 13 Mar 2023 09:38:41 +0100</pubDate><guid>/docs/tutorials/getting-started-with-ocm/</guid><description>This chapter walks you through some basic steps to get started with OCM concepts and the OCM CLI.
Prerequisites Create a component version Create a component archive Add a local resource Add an image reference Add an image resource Using a resources file Uploading component versions Bundle composed components All in One Display and Examine component versions List component versions List the resources of a component version Download the resources of a component version Download with download handlers Download an image Download an executable Download a full component version Download OCI Artifacts Transport OCM component versions Sign component versions Signing with certificates Signature Verification Prerequisites To follow the steps described in this section, you will need:</description></item><item><title>Air-gapped GitOps with OCM &amp; Flux</title><link>/docs/tutorials/air-gapped-gitops-with-ocm-flux/</link><pubDate>Wed, 23 Nov 2022 10:00:00 +0000</pubDate><guid>/docs/tutorials/air-gapped-gitops-with-ocm-flux/</guid><description>Introduction In this guide, we will show how the tools provided by OCM make it possible to automate your air-gapped deployments.</description></item><item><title>Best Practices</title><link>/docs/tutorials/best-practices/</link><pubDate>Mon, 13 Mar 2023 12:00:26 +0100</pubDate><guid>/docs/tutorials/best-practices/</guid><description>This chapter contains guidelines for common scenarios how to work with the Open Component Model.
Separate between Build and Publish Building multi-arch images Using Makefiles Prerequisites Templating the resources Pipeline integration Static and Dynamic Variable Substitution Debugging: Explain the blobs directory Self-contained transport archives CICD integration Separate between Build and Publish Typical automated builds have access to the complete internet ecosystem.</description></item><item><title>Build &amp; Deploy Infrastructure via Helm Charts with OCM</title><link>/docs/tutorials/build-deploy-infrastructure-via-helm-charts-with-ocm/</link><pubDate>Tue, 19 Mar 2024 10:36:48 +0100</pubDate><guid>/docs/tutorials/build-deploy-infrastructure-via-helm-charts-with-ocm/</guid><description>Introduction Let&amp;rsquo;s illustrate a very simple &amp;ldquo;Hello World&amp;rdquo; example application and show how to leverage OCM to build an application component containing a Helm Chart and an OCI Image and deploy it to a local kind k8s cluster.</description></item><item><title>Deployment scenario using an aggregate(d) component</title><link>/docs/tutorials/deployment-scenario-using-an-aggregated-component/</link><pubDate>Tue, 20 Jun 2023 10:00:00 +0000</pubDate><guid>/docs/tutorials/deployment-scenario-using-an-aggregated-component/</guid><description>Prerequisite We assume that the reader has already read all the previous guides in the component area. This guide discusses a more complex scenario using plain Localizations and Configurations without the use of Unpacker.</description></item><item><title>Deploying Applications with OCM &amp; GitOps</title><link>/docs/tutorials/deploying-applications-with-ocm-gitops/</link><pubDate>Wed, 23 Nov 2022 10:00:00 +0000</pubDate><guid>/docs/tutorials/deploying-applications-with-ocm-gitops/</guid><description>Introduction This tutorial will demonstrate how to get started deploying applications using the Open Component Model &amp;amp; Flux.
In this guide we will leverage Flux and the ocm-controller to deploy an existing component to a Kubernetes cluster.</description></item><item><title>GitOps Driven Configuration of OCM Applications</title><link>/docs/tutorials/gitops-driven-configuration-of-ocm-applications/</link><pubDate>Wed, 23 Nov 2022 10:00:00 +0000</pubDate><guid>/docs/tutorials/gitops-driven-configuration-of-ocm-applications/</guid><description>Introduction This guide is the final part of our series exploring OCM, the ocm-controller and how to drive GitOps processes using OCM as the source of truth.</description></item><item><title>Input and Access Types</title><link>/docs/tutorials/input-and-access-types/</link><pubDate>Wed, 05 Apr 2023 08:24:35 +0200</pubDate><guid>/docs/tutorials/input-and-access-types/</guid><description>Input and Access Types Input Types binary dir docker dockermulti file helm ociImage spiff utf-8 Access Types gitHub helm npm ociArtifact s3 Input and Access Types The Open Component Model spec supports multiple methods how to add resources to a component version.</description></item><item><title>Structuring Software with OCM</title><link>/docs/tutorials/structuring-software-with-ocm/</link><pubDate>Fri, 12 Aug 2022 10:36:48 +0100</pubDate><guid>/docs/tutorials/structuring-software-with-ocm/</guid><description>Introduction Example Helm Charts Input Specification Building the Common Transport Archive Deploying Software Localization Example Updating Components Introduction In this specification software products are comprised of logical units called components.</description></item></channel></rss>